{"version":3,"sources":["components/Display.js","components/Numbers.js","components/Operators.js","components/Controls.js","App.js","index.js"],"names":["displayTheme","createTheme","typography","fontFamily","join","textAlign","fontSize","Display","displayNum","Box","ThemeProvider","theme","Typography","sx","border","borderColor","borderRadius","p","mb","Numbers","updateDisplay","gridColumn","mr","display","gridTemplateRows","gridTemplateColumns","spacing","Button","variant","onClick","Operators","equalsClick","reset","cancelEntry","textTransform","gridRow","disableElevation","Controls","ml","appTheme","App","useState","setDisplayNum","className","width","e","char","target","dataset","value","newNum","String","includes","replace","substring","result","evaluate","err","console","error","numStr","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b91154cf.chunk.js","sourcesContent":["import { createTheme, Typography } from '@mui/material';\nimport { Box, ThemeProvider } from '@mui/system';\n\nconst displayTheme = createTheme({\n  typography: {\n    fontFamily: ['digital', 'alarm', 'sans-serif'].join(','),\n    textAlign: 'right',\n    fontSize: 40,\n  },\n});\n\nconst Display = ({ displayNum }) => {\n  return (\n    <Box>\n      <ThemeProvider theme={displayTheme}>\n        <Typography\n          sx={{\n            textAlign: 'right',\n            border: '1px solid',\n            borderColor: 'primary.main',\n            borderRadius: 1,\n            p: 2,\n            mb: 2,\n          }}\n        >\n          {displayNum}\n        </Typography>\n      </ThemeProvider>\n    </Box>\n  );\n};\n\nexport default Display;\n","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst Numbers = ({ updateDisplay }) => {\n  return (\n    <Box\n      sx={{\n        gridColumn: '1 / span 1',\n        mr: 2,\n        display: 'grid',\n        gridTemplateRows: 'repeat(4, 1fr)',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        // width: '50%',\n        // ml: 'auto',\n        // mr: 'auto',\n      }}\n      spacing={2}\n    >\n      <Button data-value=\"1\" variant=\"outlined\" onClick={updateDisplay}>\n        1\n      </Button>\n      <Button data-value=\"2\" variant=\"outlined\" onClick={updateDisplay}>\n        2\n      </Button>\n      <Button data-value=\"3\" variant=\"outlined\" onClick={updateDisplay}>\n        3\n      </Button>\n      <Button data-value=\"4\" variant=\"outlined\" onClick={updateDisplay}>\n        4\n      </Button>\n      <Button data-value=\"5\" variant=\"outlined\" onClick={updateDisplay}>\n        5\n      </Button>\n      <Button data-value=\"6\" variant=\"outlined\" onClick={updateDisplay}>\n        6\n      </Button>\n      <Button data-value=\"7\" variant=\"outlined\" onClick={updateDisplay}>\n        7\n      </Button>\n      <Button data-value=\"8\" variant=\"outlined\" onClick={updateDisplay}>\n        8\n      </Button>\n      <Button data-value=\"9\" variant=\"outlined\" onClick={updateDisplay}>\n        9\n      </Button>\n      <Button\n        sx={{ gridColumn: '1 / span 2' }}\n        data-value=\"0\"\n        variant=\"outlined\"\n        onClick={updateDisplay}\n      >\n        0\n      </Button>\n      <Button data-value=\".\" variant=\"outlined\" onClick={updateDisplay}>\n        .\n      </Button>\n    </Box>\n  );\n};\n\nexport default Numbers;\n","import { Button } from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst Operators = ({ updateDisplay, equalsClick, reset, cancelEntry }) => {\n  return (\n    <Box\n      sx={{\n        gridColumn: '2 / span 1',\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        // width: '50%',\n        // ml: 'auto',\n        // mr: 'auto',\n      }}\n      spacing={2}\n    >\n      <Button\n        sx={{ gridColumn: '1 / span 1' }}\n        data-value=\"+\"\n        variant=\"outlined\"\n        onClick={updateDisplay}\n      >\n        +\n      </Button>\n      <Button\n        sx={{ gridColumn: '1 / span 1' }}\n        data-value=\"-\"\n        variant=\"outlined\"\n        onClick={updateDisplay}\n      >\n        -\n      </Button>\n      <Button\n        sx={{ textTransform: 'none', gridColumn: '1 / span 1' }}\n        data-value=\"*\"\n        variant=\"outlined\"\n        onClick={updateDisplay}\n      >\n        x\n      </Button>\n      <Button\n        sx={{ gridColumn: '1 / span 1' }}\n        data-value=\"/\"\n        variant=\"outlined\"\n        onClick={updateDisplay}\n      >\n        Ã·\n      </Button>\n\n      <Button\n        sx={{ gridColumn: '2 / span 1', gridRow: '1 / span 1' }}\n        variant=\"outlined\"\n        onClick={reset}\n      >\n        C\n      </Button>\n      <Button\n        sx={{ gridColumn: '2 / span 1', gridRow: '2 / span 1' }}\n        variant=\"outlined\"\n        onClick={cancelEntry}\n      >\n        CE\n      </Button>\n      <Button\n        sx={{ gridColumn: '2 / span 1', gridRow: '3 / span 2' }}\n        data-value=\"=\"\n        variant=\"contained\"\n        disableElevation\n        onClick={equalsClick}\n      >\n        =\n      </Button>\n    </Box>\n  );\n};\n\nexport default Operators;\n","import { Box } from '@mui/system';\nimport Numbers from './Numbers';\nimport Operators from './Operators';\n\nconst Controls = ({ updateDisplay, equalsClick, reset, cancelEntry }) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '3fr 2fr',\n        ml: 'auto',\n        mr: 'auto',\n      }}\n    >\n      <Numbers updateDisplay={updateDisplay} />\n      <Operators\n        updateDisplay={updateDisplay}\n        equalsClick={equalsClick}\n        reset={reset}\n        cancelEntry={cancelEntry}\n      />\n    </Box>\n  );\n};\n\nexport default Controls;\n","import { useState } from 'react';\nimport { evaluate } from 'mathjs';\nimport { Box, ThemeProvider } from '@mui/system';\nimport { createTheme } from '@mui/material';\n\nimport './App.css';\n\nimport Display from './components/Display';\nimport Controls from './components/Controls';\n\nconst appTheme = createTheme({\n  typography: {\n    fontSize: 24,\n  },\n});\n\nfunction App() {\n  const [displayNum, setDisplayNum] = useState('0');\n\n  const handleClick = e => {\n    const char = e.target.dataset.value;\n\n    let newNum = displayNum + char;\n\n    if (String(newNum).includes('error')) {\n      newNum = newNum.replace('error', '');\n    }\n\n    // remove leading 0\n    if (newNum[0] === '0' && newNum[1] !== '.') newNum = newNum.substring(1);\n    setDisplayNum(newNum);\n  };\n\n  const handleCalc = () => {\n    try {\n      const result = evaluate(displayNum);\n      setDisplayNum(result);\n    } catch (err) {\n      console.error(`ğŸ’¥ ğŸ’¥ ${err}`);\n      setDisplayNum('error');\n    }\n  };\n\n  const handleReset = () => {\n    setDisplayNum(0);\n  };\n\n  const handleCancel = () => {\n    let numStr = String(displayNum);\n\n    numStr = numStr.slice(0, -1);\n\n    setDisplayNum(numStr);\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={appTheme}>\n        <Box className=\"app\">\n          <Box sx={{ width: '60%', ml: 'auto', mr: 'auto' }}>\n            <Display displayNum={displayNum} />\n            <Controls\n              updateDisplay={handleClick}\n              equalsClick={handleCalc}\n              reset={handleReset}\n              cancelEntry={handleCancel}\n            />\n          </Box>\n        </Box>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}